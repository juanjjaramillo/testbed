name: Security

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'
  push:
    branches:
      - 'main'
      - 'renovate/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  govulncheck:
    name: Govulncheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Analyze source code
        uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          go-version-file: './go.mod'
          repo-checkout: false

  trivy:
    name: Trivy
    if: ${{ github.event.schedule || (github.event_name == 'push' && github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    permissions:
      # For actions/checkout to fetch code
      contents: read
      # For github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build image from Dockerfile
        run: |
          docker build --tag juanjjaramillo/testbed:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
        with:
          image-ref: 'juanjjaramillo/testbed:${{ github.sha }}'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@5d5cd550d3e189c569da8f16ea8de2d821c9bf7a # v3.31.2
        with:
          sarif_file: 'trivy-results.sarif'

  openssf:
    name: OpenSSF Scorecard
    if: ${{ github.event.schedule || (github.event_name == 'push' && github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    permissions:
      # Needed to publish results and get a badge (see publish_results below)
      id-token: write
      # For actions/checkout to fetch code
      contents: read
      # For github/codeql-action/upload-sarif to upload SARIF results
      security-events: write

    steps:
      - name: Checkout GitHub Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@4eaacf0543bb3f2c246792bd56e8cdeffafb205a # v2.4.3
        with:
          results_file: results.sarif
          results_format: sarif
          # (Optional) "write" PAT token. Uncomment the `repo_token` line below if:
          # - you want to enable the Branch-Protection check on a *public* repository, or
          # - you are installing Scorecard on a *private* repository
          # To create the PAT, follow the steps in
          # https://github.com/ossf/scorecard-action#authentication-with-pat
          repo_token: ${{ secrets.SCORECARD_TOKEN }}

          # Public repositories:
          #   - Publish results to OpenSSF REST API for easy access by consumers
          #   - Allows the repository to include the Scorecard badge.
          #   - See https://github.com/ossf/scorecard-action#publishing-results
          # For private repositories:
          #   - `publish_results` will always be set to `false`, regardless
          #     of the value entered here
          publish_results: true

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: SARIF file
          path: results.sarif
          retention-days: 5

      - name: Upload OSSF Scorecard scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@5d5cd550d3e189c569da8f16ea8de2d821c9bf7a # v3.31.2
        with:
          sarif_file: results.sarif
